/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define OTH_L 4
#define NUM_L 2
#define SYM_L 3
#define MED_L 5
#define FUN_L 6

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace 
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";
        combo_caps { 
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&caps_word>;
        };
        combo_esc { 
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
        combo_quote { 
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp SQT>;
        };

    };
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    behaviors {
         hm_l: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;                        
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9  12  15 16 17 18 19  25 26 27 28 29  31 32 33>;    // <---[[right-hand keys + thumbs]]
        };
        hm_r: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;                        
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4  10 11 12 13 14   16 17  20 21 22 23 24  30 31 32 33>;    // <---[[left-hand keys + thumbs]]
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp Q      &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &hm_l LCTRL A &hm_l LALT S &hm_l LGUI D &hm_l LSHFT F    &kp G         &kp H            &hm_r RSHFT J     &hm_r RGUI K &hm_r LALT L &hm_r RCTRL SCLN
                &kp Z      &kp X      &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH
                                                  &lt SYM_L SPACE &lt NAV_L TAB  &lt NUM_L RET &kp BKSP
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &kp PRINTSCREEN     &trans     &trans      &trans          &trans       &trans           &trans         &kp UARW      &trans     &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp LARW       &kp DARW    &kp RARW     &trans
                &kp LG(Z)      &kp LG(X)      &kp LG(C)           &kp LS(LG(B))          &kp LG(B)        &trans           &kp HOME       &kp PG_DN   &kp PG_UP  &kp END
                                                  &trans          &trans       &trans          &trans
            >;
        };


        num_layer {
            label = "Num";
            bindings = <
                &kp FSLH   &kp N1    &kp N2      &kp N3          &kp EQUAL      &trans          &trans         &trans      &trans     &trans
                &kp  N0     &kp N4     &kp N5      &kp N6          &kp PLUS     &trans         &kp DOT         &trans      &trans     &trans
                &kp STAR  &kp N7     &kp N8      &kp N9          &kp MINUS      &trans          &trans         &trans      &trans     &trans
                                                  &trans          &trans     &trans          &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &trans     &kp LT    &kp  EQUAL   &kp GT     &trans          &kp EXCLAMATION &kp LBKT   &kp DLLR    &kp RBKT   &kp DOUBLE_QUOTES
                &kp GRAVE    &kp LPAR  &kp MINUS  &kp RPAR &kp PLUS          &kp PERCENT &kp LBRC   &kp UNDER    &kp RBRC   &kp SINGLE_QUOTE
                &kp TILDE    &kp HASH  &kp AT &kp SLASH &kp BSLH         &kp CARET &kp PIPE   &kp LS(P)    &kp AMPERSAND    &trans
                                                   &trans &trans     &trans &trans
            >;
        };

        other_layer {
            label = "Other";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &bt BT_CLR
                &trans     &trans     &trans      &kp N0          &trans       &trans           &out OUT_USB   &out OUT_BLE       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans          &trans       &trans           &trans
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp C_PREV     &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                                                  &trans          &trans       &kp C_STOP       &kp C_PLAY_PAUSE
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
                &kp F12     &kp F7     &kp F8      &kp F9     &kp PSCRN         &trans          &trans         &trans      &trans     &trans
                &kp F11     &kp F4     &kp F5      &kp F6     &kp SLCK          &trans          &trans         &trans      &trans     &trans
                &kp F10     &kp F1     &kp F2      &kp F3     &kp PAUSE_BREAK   &trans          &trans         &trans      &trans     &trans
                                                   &none      &none             &trans          &trans
            >;
        };
    };
};
